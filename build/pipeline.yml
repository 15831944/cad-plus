#Install CodeSigning task from https://marketplace.visualstudio.com/items?itemName=stefankert.codesigning
#Install version reading task https://marketplace.visualstudio.com/items?itemName=OneLuckiDev.json2variable

trigger:
  branches:
    include:
    - master
    - dev

name: '$(Date:yyyyMMdd).$(Rev:r)'

stages:

- stage: 'Build'
  variables:
  - group: build-vars

  jobs:
  - job: BuildTestInstaller
    variables:
      previewVersion: 0.0.0.0
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio
    
    steps:
            
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet'

      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: 'cad-plus.sln'

      - template: templates/get-version.yml
        parameters:
          versionFile: 'version.json'

      - template: templates/compile-binaries.yml
        parameters:
          version: '$(previewVersion)'
    
      - task: VSTest@2
        displayName: 'Unit test'
        inputs:
          testAssemblyVer2: |
            tests\_build\*.Tests.dll
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'

      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: 'installer\Installer.sln'

      - template: templates/compile-installer.yml
        parameters:
          version: '$(previewVersion)'
          packageSuffix: ' (Preview)'
          artifactName: preview

      - task: CopyFiles@2
        displayName: 'Copy Version File'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: 'version.json'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/installer'
      
      - publish: '$(Build.ArtifactStagingDirectory)/installer'
        artifact: 'installer'

- stage: 'PublishToProdAppStore'
  displayName: 'Publish To Production App Store'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'installer'

    - task: oneLuckiDevJson2Variable@1
      displayName: 'Read version information'
      inputs:
        jsonFile: '$(Pipeline.Workspace)/installer/version.json'
        shouldPrefixVariables: true
        variablePrefix: 'Version'

    - task: AppCenterDistribute@3
      inputs:
        serverEndpoint: 'App Center'
        appSlug: 'xarial/CAD-Toolset'
        appFile: '$(Pipeline.Workspace)/installer/prod/CADPlusToolset.msi'
        buildVersion: '$(Version.Major).$(Version.Minor).$(Build.BuildId).$(Version.Revision)'
        releaseNotesOption: 'input'
        releaseNotesInput: '-'
        isMandatory: true
        destinationType: 'groups'
        distributionGroupId: $(APPCENTER_GRP_PROD)