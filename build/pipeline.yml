trigger:
  branches:
    include:
    - master
    - dev

name: '$(Date:yyyyMMdd).$(Rev:r)'

stages:

- stage: 'Build'
    
  variables:
  - group: build-vars
  - name: previewVersion #filled in get-version template
    value: 0.0.0.0
  - name: prodVersion #filled in get-version template
    value: 0.0.0.0
  - name: isProd
    value: ${{eq(variables['Build.SourceBranch'], 'refs/heads/build-pipeline')}}
  jobs:
  - job: BuildTestInstaller
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio
    
    steps:
            
    - script: echo $(isProd)

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'cad-plus.sln'

    - template: templates/get-version.yml
      parameters:
        versionFile: 'version.json'

    - template: templates/compile-binaries.yml
      parameters:
        version: '$(previewVersion)'
  
    - task: VSTest@2
      displayName: 'Unit test'
      inputs:
        testAssemblyVer2: |
          tests\_build\*.Tests.dll
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: 'installer\Installer.sln'

    - template: templates/compile-installer.yml
      parameters:
        version: '$(previewVersion)'
        packageSuffix: ' (Preview)'
        artifactName: preview

    # compile production if required
    - task: DeleteFiles@1
      condition: $(isProd)
      inputs:
        SourceFolder: '_build'
        Contents: '*.*'
        RemoveSourceFolder: true
    
    - ${{ if eq(variables['isProd'], true) }}:
      - template: templates/compile-binaries.yml
        parameters:
          version: '$(prodVersion)'

    - ${{ if eq(variables['isProd'], true) }}:
      - template: templates/compile-installer.yml
        parameters:
          version: '$(prodVersion)'
          artifactName: prod

    # add version file and publish artifact
    - task: CopyFiles@2
      displayName: 'Copy Version File'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'version.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/installer'
    
    - publish: '$(Build.ArtifactStagingDirectory)/installer'
      artifact: 'installer'

- stage: 'PublishToPreviewAppStore'
  displayName: 'Publish To Preview App Store'
  variables:
  - group: build-vars
  - name: previewVersion #filled in get-version template
    value: 0.0.0.0
  - name: prodVersion #not used
    value: 0.0.0.0
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'installer'

    - template: templates/get-version.yml
      parameters:
        versionFile: '$(Pipeline.Workspace)/installer/version.json'

    - task: AppCenterDistribute@3
      inputs:
        serverEndpoint: 'App Center'
        appSlug: 'xarial/CAD-Toolset'
        appFile: '$(Pipeline.Workspace)/installer/preview/CADPlusToolset.msi'
        buildVersion: '$(previewVersion)'
        releaseNotesOption: 'input'
        releaseNotesInput: '-'
        isMandatory: true
        destinationType: 'groups'
        distributionGroupId: $(APPCENTER_GRP_PREVIEW)

- stage: 'PublishToProdAppStore'
  displayName: 'Publish To Production App Store'
  variables:
  - group: build-vars
  - name: previewVersion #not used
    value: 0.0.0.0
  - name: prodVersion #filled in get-version template
    value: 0.0.0.0
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/build-pipeline'))
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'installer'

    - template: templates/get-version.yml
      parameters:
        versionFile: '$(Pipeline.Workspace)/installer/version.json'

    - task: AppCenterDistribute@3
      inputs:
        serverEndpoint: 'App Center'
        appSlug: 'xarial/CAD-Toolset'
        appFile: '$(Pipeline.Workspace)/installer/prod/CADPlusToolset.msi'
        buildVersion: '$(prodVersion)'
        releaseNotesOption: 'input'
        releaseNotesInput: '-'
        isMandatory: true
        destinationType: 'groups'
        distributionGroupId: $(APPCENTER_GRP_PROD)