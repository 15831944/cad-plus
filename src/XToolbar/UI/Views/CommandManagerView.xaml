<UserControl x:Class="Xarial.CadPlus.CustomToolbar.UI.Views.CommandManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hlp="clr-namespace:Xarial.XToolkit.Wpf;assembly=Xarial.XToolkit.Wpf"
             xmlns:conv="clr-namespace:Xarial.CadPlus.CustomToolbar.UI.Converters"
             xmlns:base="clr-namespace:Xarial.CadPlus.CustomToolbar.UI.Base"
             xmlns:vm="clr-namespace:Xarial.CadPlus.CustomToolbar.UI.ViewModels"
			 xmlns:ext="clr-namespace:Xarial.CadPlus.CustomToolbar.UI.Extensions"
             mc:Ignorable="d"
             d:DataContext="{x:Type vm:CommandManagerVM}"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <hlp:BindingProxy x:Key="CmdsMgr" Data="{Binding}" />
        <conv:SelectedCommandConverter x:Key="selCmdConv" />
        <conv:SelectedCommandGroupConverter x:Key="selCmdGrpConv" />
        <conv:PathToIconConverter x:Key="pathToIconConv" />
        <conv:CommandContextMenuTitleConverter x:Key="menuTitleConv" />
        <ContextMenu x:Key="CommandContextMenu">
            <MenuItem Header="{Binding Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.MoveUp}}"
					  Command="{Binding Source={StaticResource CmdsMgr}, Path=Data.MoveCommandUpCommand}"
					  CommandParameter="{Binding}" />
            <MenuItem Header="{Binding Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.MoveDown}}"
					  Command="{Binding Source={StaticResource CmdsMgr}, Path=Data.MoveCommandDownCommand}"
					  CommandParameter="{Binding}" />
            <MenuItem Header="{Binding Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.InsertAfter}}"
					  Command="{Binding Source={StaticResource CmdsMgr}, Path=Data.InsertCommandAfterCommand}"
					  CommandParameter="{Binding}" />
            <MenuItem Header="{Binding Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.InsertBefore}}"
					  Command="{Binding Source={StaticResource CmdsMgr}, Path=Data.InsertCommandBeforeCommand}"
					  CommandParameter="{Binding}" />
            <MenuItem Header="{Binding Converter={StaticResource menuTitleConv}, ConverterParameter={x:Static conv:CommandContextMenu_e.Remove}}"
					  Command="{Binding Source={StaticResource CmdsMgr}, Path=Data.CommandRemoveCommand}"
					  CommandParameter="{Binding}" />
        </ContextMenu>
        <DataTemplate x:Key="NewCommandTemplate">
            <Button Command="{Binding Path=AddNewItemCommand}" Width="12" Height="12" Background="#FF388A34" Margin="2">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Setters>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Path Stretch="UniformToFill" Fill="{TemplateBinding Background}"
                                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                                  Data="F1M11,9L9,9 9,11 7.019,11 7.019,9 5,9 5,7.018 7.019,7.018 7.019,5 9,5 9,7.018 11,7.018z">
                                        </Path>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="Gray" BlurRadius="0" />
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="5"
                                                            Storyboard.TargetProperty="(Effect).BlurRadius"
                                                            FillBehavior="HoldEnd" Duration="0:0:0.1"
                                                             AutoReverse="False" RepeatBehavior="1x" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="(Effect).BlurRadius"
                                                FillBehavior="HoldEnd" Duration="0:0:0.1" AutoReverse="False" RepeatBehavior="1x" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
        <DataTemplate x:Key="MacroCommandTemplate">
            <ToggleButton Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
						  Command="{Binding Path=DataContext.SelectCommandCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
						  CommandParameter="{Binding}"
						  ContextMenu="{StaticResource CommandContextMenu}"
						  Margin="2" Width="24" Height="24">
                <ToggleButton.IsChecked>
                    <MultiBinding Converter="{StaticResource selCmdConv}" Mode="OneWay">
                        <Binding />
                        <Binding Path="DataContext.SelectedElement" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                    </MultiBinding>
                </ToggleButton.IsChecked>
                <Image Source="{Binding Path=IconPath, Converter={StaticResource pathToIconConv}}"></Image>
                <ToggleButton.ToolTip>
                    <Grid MaxWidth="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding Path=Title}" FontWeight="Bold" />
                        <TextBlock Grid.Row="1" Text="{Binding Path=Description}" TextWrapping="Wrap" />
                    </Grid>
                </ToggleButton.ToolTip>
            </ToggleButton>
        </DataTemplate>
        <DataTemplate x:Key="ToolbarTemplate">
            <ToolBar Margin="5,1" ItemsSource="{Binding Path=Commands}"
					 ext:UIElementExtension.SelectListItemOnClick="True"
					 ContextMenu="{StaticResource CommandContextMenu}">
                <ToolBar.ItemTemplateSelector>
                    <base:CommandDataTemplateSelector NewCommandTemplate="{StaticResource NewCommandTemplate}"
													  CommandTemplate="{StaticResource MacroCommandTemplate}">
                    </base:CommandDataTemplateSelector>
                </ToolBar.ItemTemplateSelector>
            </ToolBar>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <ListBox ItemsSource="{Binding Path=Groups}"
			SelectedItem="{Binding Path=SelectedElement, Converter={StaticResource selCmdGrpConv}}">
            <ListBox.ItemTemplateSelector>
                <base:CommandDataTemplateSelector
					NewCommandTemplate="{StaticResource NewCommandTemplate}"
					CommandTemplate="{StaticResource ToolbarTemplate}">
                </base:CommandDataTemplateSelector>
            </ListBox.ItemTemplateSelector>
        </ListBox>
    </Grid>
</UserControl>
